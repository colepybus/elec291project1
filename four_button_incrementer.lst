0000              1   ; 76E003 ADC test program: Reads channel 7 on P1.1, pin 14
0000              2   
                  4   $LIST
0000              6   
0000              7   ;  N76E003 pinout:
0000              8   ;                               -------
0000              9   ;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
0000             10   ;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
0000             11   ;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
0000             12   ;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
0000             13   ;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
0000             14   ;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
0000             15   ;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
0000             16   ;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
0000             17   ;                         VDD -|9    12|- P1.3/SCL/[STADC]
0000             18   ;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
0000             19   ;                               -------
0000             20   ;
0000             21   
0000             22   CLK               EQU 16600000 ; Microcontroller system frequency in Hz
0000             23   BAUD              EQU 115200 ; Baud rate of UART in bps
0000             24   TIMER1_RELOAD     EQU (0x100-(CLK/(16*BAUD)))
0000             25   TIMER0_RELOAD_1MS EQU (0x10000-(CLK/1000))
0000             26   
0000             27   ORG 0x0000
0000 0203D8      28            ljmp main
0003             29   
0003             30   ;                     1234567890123456    <- This helps determine the location of the counter
0003 546F3D20    31   temp_readings:      db 'To=   C  Tj=  C ', 0
     20204320
     20546A3D
     20204320
     00
0014 73202020    32   selected_temp_time: db 's   ,   r   ,   ', 0
     2C202020
     72202020
     2C202020
     00
0025             33   
0025             34   cseg
0025             35   ; These 'equ' must match the hardware wiring
0025             36   LCD_RS equ P1.3
0025             37   ;LCD_RW equ PX.X ; Not used in this code, connect the pin to GND
0025             38   LCD_E  equ P1.4
0025             39   LCD_D4 equ P0.0
0025             40   LCD_D5 equ P0.1
0025             41   LCD_D6 equ P0.2
0025             42   LCD_D7 equ P0.3
0025             43   
                 45   	$LIST
00D9             47   
00D9             48   ; These register definitions needed by 'math32.inc'
0030             49   DSEG at 30H
0030             50   x:   ds 4
0034             51   y:   ds 4
0038             52   bcd: ds 5
003D             53   
0000             54   BSEG
0000             55   mf: dbit 1
0001             56   
                546   $LIST
                 58   $LIST
0349             60   
0349             61   Init_All:
0349             62            ; Configure all the pins for biderectional I/O
0349 75AC00      63            mov     P3M1, #0x00
034C 75AD00      64            mov     P3M2, #0x00
034F 75B300      65            mov     P1M1, #0x00
0352 75B400      66            mov     P1M2, #0x00
0355 75B100      67            mov     P0M1, #0x00
0358 75B200      68            mov     P0M2, #0x00
035B             69            
035B 438E10      70            orl     CKCON, #0x10 ; CLK is the input for timer 1
035E 438780      71            orl     PCON, #0x80 ; Bit SMOD=1, double baud rate
0361 759852      72            mov     SCON, #0x52
0364 53C4DF      73            anl     T3CON, #0b11011111
0367 53890F      74            anl     TMOD, #0x0F ; Clear the configuration bits for timer 1
036A 438920      75            orl     TMOD, #0x20 ; Timer 1 Mode 2
036D 758DF7      76            mov     TH1, #TIMER1_RELOAD ; TH1=TIMER1_RELOAD;
0370 D28E        77            setb TR1
0372             78            
0372             79            ; Using timer 0 for delay functions.  Initialize here:
0372 C28C        80            clr     TR0 ; Stop timer 0
0374 438E08      81            orl     CKCON,#0x08 ; CLK is the input for timer 0
0377 5389F0      82            anl     TMOD,#0xF0 ; Clear the configuration bits for timer 0
037A 438901      83            orl     TMOD,#0x01 ; Timer 0 in Mode 1: 16-bit timer
037D             84            
037D             85            ; Initialize the pin used by the ADC (P1.1) as input.
037D 43B302      86            orl     P1M1, #0b00000010
0380 53B4FD      87            anl     P1M2, #0b11111101
0383             88            
0383             89            ; Initialize and start the ADC:
0383 53E8F0      90            anl ADCCON0, #0xF0
0386 43E807      91            orl ADCCON0, #0x07 ; Select channel 7
0389             92            ; AINDIDS select if some pins are analog inputs or digital I/O:
0389 75F600      93            mov AINDIDS, #0x00 ; Disable all analog inputs
038C 43F680      94            orl AINDIDS, #0b10000000 ; P1.1 is analog input
038F 43E101      95            orl ADCCON1, #0x01 ; Enable ADC
0392             96            
0392 22          97            ret
0393             98            
0393             99   wait_1ms:
0393 C28C       100            clr     TR0 ; Stop timer 0
0395 C28D       101            clr     TF0 ; Clear overflow flag
0397 758CBF     102            mov     TH0, #high(TIMER0_RELOAD_1MS)
039A 758A28     103            mov     TL0,#low(TIMER0_RELOAD_1MS)
039D D28C       104            setb TR0
039F 308DFD     105            jnb     TF0, $ ; Wait for overflow
03A2 22         106            ret
03A3            107   
03A3            108   ; Wait the number of miliseconds in R2
03A3            109   waitms:
03A3 120393     110            lcall wait_1ms
03A6 DAFB       111            djnz R2, waitms
03A8 22         112            ret
03A9            113   
03A9            114   ; We can display a number any way we want.  In this case with
03A9            115   ; four decimal places.
03A9            116   Display_formated_BCD:
03A9 C0E0       117            push acc
03AB 740A       117            mov a, #10
03AD 14         117            dec a
03AE 1200BC     117            lcall ?Set_Cursor_2 ; Select column and row
03B1 D0E0       117            pop acc
03B3 C000       118            push ar0
03B5 A83A       118            mov r0, bcd+2
03B7 1200C3     118            lcall ?Display_BCD
03BA D000       118            pop ar0
03BC C0E0       119            push acc
03BE 742E       119            mov a, #'.'
03C0 120074     119            lcall ?WriteData
03C3 D0E0       119            pop acc
03C5 C000       120            push ar0
03C7 A839       120            mov r0, bcd+1
03C9 1200C3     120            lcall ?Display_BCD
03CC D000       120            pop ar0
03CE C000       121            push ar0
03D0 A838       121            mov r0, bcd+0
03D2 1200C3     121            lcall ?Display_BCD
03D5 D000       121            pop ar0
03D7 22         122            ret
03D8            123            
03D8            124   main:
03D8 75817F     125            mov sp, #0x7f
03DB 120349     126            lcall Init_All
03DE 12007E     127       lcall LCD_4BIT
03E1            128       
03E1            129       ; initial messages in LCD
03E1 C0E0       130            push acc
03E3 7401       130            mov a, #1
03E5 14         130            dec a
03E6 1200BE     130            lcall ?Set_Cursor_1 ; Select column and row
03E9 D0E0       130            pop acc
03EB C083       131            push dph
03ED C082       131            push dpl
03EF C0E0       131            push acc
03F1 900003     131            mov dptr, #temp_readings
03F4 1200B1     131            lcall ?Send_Constant_String
03F7 D0E0       131            pop acc
03F9 D082       131            pop dpl
03FB D083       131            pop dph
03FD C0E0       132            push acc
03FF 7401       132            mov a, #1
0401 14         132            dec a
0402 1200BC     132            lcall ?Set_Cursor_2 ; Select column and row
0405 D0E0       132            pop acc
0407 C083       133            push dph
0409 C082       133            push dpl
040B C0E0       133            push acc
040D 900014     133            mov dptr, #selected_temp_time
0410 1200B1     133            lcall ?Send_Constant_String
0413 D0E0       133            pop acc
0415 D082       133            pop dpl
0417 D083       133            pop dph
0419            134            
0419            135   Forever:
0419 C2EF       136            clr ADCF
041B D2EE       137            setb ADCS ;  ADC start trigger signal
041D 30EFFD     138       jnb ADCF, $ ; Wait for conversion complete
0420            139       
0420            140       ; Read the ADC result and store in [R1, R0]
0420 E5C3       141       mov a, ADCRH   
0422 C4         142       swap a
0423 C0E0       143       push acc
0425 540F       144       anl a, #0x0f
0427 F9         145       mov R1, a
0428 D0E0       146       pop acc
042A 54F0       147       anl a, #0xf0
042C 45C2       148       orl a, ADCRL
042E F8         149       mov R0, A
042F            150       
042F            151       ; Convert to voltage
042F 8830       152            mov x+0, R0
0431 8931       153            mov x+1, R1
0433 753200     154            mov x+2, #0
0436 753300     155            mov x+3, #0
0439 75347C     156            mov y+0, #low (50300 % 0x10000) 
043C 7535C4     156            mov y+1, #high(50300 % 0x10000) 
043F 753600     156            mov y+2, #low (50300 / 0x10000) 
0442 753700     156            mov y+3, #high(50300 / 0x10000)  ; VCC voltage measured
0445 120253     157            lcall mul32
0448 7534FF     158            mov y+0, #low (4095 % 0x10000) 
044B 75350F     158            mov y+1, #high(4095 % 0x10000) 
044E 753600     158            mov y+2, #low (4095 / 0x10000) 
0451 753700     158            mov y+3, #high(4095 / 0x10000)  ; 2^12-1
0454 1202E0     159            lcall div32
0457            160            
0457            161            ; Convert to BCD and display
0457 1200D9     162            lcall hex2bcd
045A 1203A9     163            lcall Display_formated_BCD
045D            164            
045D            165            ; Wait 500 ms between conversions
045D 7AFA       166            mov R2, #250
045F 1203A3     167            lcall waitms
0462 7AFA       168            mov R2, #250
0464 1203A3     169            lcall waitms
0467            170            
0467 B297       171            cpl P1.7 ; Blinking LED...
0469            172   
0469 020419     173            ljmp Forever
046C            174            
046C            175   END
